const override = require('./override');
const restrictedProperties = [{
  object: 'arguments',
  property: 'callee',
  message: 'arguments.callee is deprecated',
}, {
  property: '__defineGetter__',
  message: 'Please use Object.defineProperty instead.',
}, {
  property: '__defineSetter__',
  message: 'Please use Object.defineProperty instead.',
}, {
  object: 'Math',
  property: 'pow',
  message: 'Use the exponentiation operator (**) instead.',
}];

module.exports = {
  rules: Object.assign({
    'array-bracket-spacing': ['error', 'never'],
    'array-callback-return': 'error',
    'block-scoped-var': 'error',
    'computed-property-spacing': ['error', 'never'],
    'consistent-return': 'error',
    'consistent-this': 'off',
    'default-case': ['error', { commentPattern: '^no default$' }],
    'dot-notation': ['error', { allowKeywords: true }],
    'guard-for-in': 'error',
    'no-alert': 'warn',
    'no-await-in-loop': 'error',
    'no-case-declarations': 'error',
    'no-compare-neg-zero': 'error',
    'no-console': 'warn',
    'no-continue': 'error',
    'no-div-regex': 'off',
    'no-else-return': 'error',
    'no-empty': 'error',
    'no-eq-null': 'off',
    'no-extra-semi': 'error',
    'no-implicit-coercion': 'error',
    'no-implicit-globals': 'off',
    'no-invalid-this': 'off',
    'no-magic-numbers': ['off', { ignore: [], ignoreArrayIndexes: true, enforceConst: true, detectObjects: false }],
    'no-param-reassign': 'error',
    'no-restricted-properties': ['error', ...restrictedProperties],
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-spaced-func': 'error',
    'no-unused-labels': 'error',
    'no-useless-concat': 'error',
    'no-var': 'error',
    'no-warning-comments': ['off', { terms: ['todo', 'fixme', 'xxx'], location: 'start' }],
    'object-curly-spacing': ['error', 'always'],
    'object-shorthand': 'error',
    'prefer-const': 'error',
    'prefer-template': 'error',
    'quote-props': ['error', 'as-needed', { 'unnecessary': false }],
    'radix': 'error',
    'require-await': 'off',
    'vars-on-top': 'error',

    // TODO clean duplicates
    'import/export': 'error',
    'import/first': 'error',
    'import/no-duplicates': 'error',
    'import/no-mutable-exports': 'error',
    'import/no-unresolved': ['error', { caseSensitive: true, commonjs: true, amd: true }],
  }, override.rules),
};
